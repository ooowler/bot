"""update pools tables

Revision ID: 9c454ae11185
Revises: ee9024587252
Create Date: 2025-05-07 23:48:59.129433

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9c454ae11185"
down_revision: Union[str, None] = "ee9024587252"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("pools", sa.Column("settings", sa.JSON(), nullable=False))
    op.alter_column("pools", "is_active", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column("pools", "status", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "pools",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    op.drop_constraint("pools_owner_id_fkey", "pools", type_="foreignkey")
    op.create_foreign_key(
        None, "pools", "users", ["owner_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "pools", type_="foreignkey")
    op.create_foreign_key("pools_owner_id_fkey", "pools", "users", ["owner_id"], ["id"])
    op.alter_column(
        "pools",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column("pools", "status", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("pools", "is_active", existing_type=sa.BOOLEAN(), nullable=True)
    op.drop_column("pools", "settings")
    # ### end Alembic commands ###
